# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term kitty
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
# set $menu dmenu_path | dmenu | xargs swaymsg exec --
set $menu swaymsg exec albert toggle

set $WOBSOCK $XDG_RUNTIME_DIR/wob.sock

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
output * bg /HDD/Pictures/nord_underwater.png fill
# Monitors config
output "Samsung Electric Company T24D391 0x00000000" res 1920x1080@60Hz pos 1440 0
output "Acer Technologies Acer V193W LC1080364212" res 1440x900@60Hz pos 0 0

### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start your launcher
    bindsym $mod+d exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Reload waybar
    bindsym $mod+Shift+w exec killall -SIGUSR2 waybar

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec wlogout -p layer-shell
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    #bindsym $mod+1 workspace number 1
    #bindsym $mod+2 workspace number 2
    #bindsym $mod+3 workspace number 3
    #bindsym $mod+4 workspace number 4
    #bindsym $mod+5 workspace number 5
    #bindsym $mod+6 workspace number 6
    #bindsym $mod+7 workspace number 7
    #bindsym $mod+8 workspace number 8
    #bindsym $mod+9 workspace number 9
    #bindsym $mod+0 workspace number 10
    # Version using sov
    bindsym --no-repeat $mod+1 workspace number 1; exec "echo 1 > /tmp/sovpipe"
    bindsym --no-repeat $mod+2 workspace number 2; exec "echo 1 > /tmp/sovpipe"
    bindsym --no-repeat $mod+3 workspace number 3; exec "echo 1 > /tmp/sovpipe"
    bindsym --no-repeat $mod+4 workspace number 4; exec "echo 1 > /tmp/sovpipe"
    bindsym --no-repeat $mod+5 workspace number 5; exec "echo 1 > /tmp/sovpipe"
    bindsym --no-repeat $mod+6 workspace number 6; exec "echo 1 > /tmp/sovpipe"
    bindsym --no-repeat $mod+7 workspace number 7; exec "echo 1 > /tmp/sovpipe"
    bindsym --no-repeat $mod+8 workspace number 8; exec "echo 1 > /tmp/sovpipe"
    bindsym --no-repeat $mod+9 workspace number 9; exec "echo 1 > /tmp/sovpipe"
    bindsym --no-repeat $mod+0 workspace number 10; exec "echo 1 > /tmp/sovpipe"
    
    bindsym --release $mod+1 exec "echo 0 > /tmp/sovpipe"
    bindsym --release $mod+2 exec "echo 0 > /tmp/sovpipe"
    bindsym --release $mod+3 exec "echo 0 > /tmp/sovpipe"
    bindsym --release $mod+4 exec "echo 0 > /tmp/sovpipe"
    bindsym --release $mod+5 exec "echo 0 > /tmp/sovpipe"
    bindsym --release $mod+6 exec "echo 0 > /tmp/sovpipe"
    bindsym --release $mod+7 exec "echo 0 > /tmp/sovpipe"
    bindsym --release $mod+8 exec "echo 0 > /tmp/sovpipe"
    bindsym --release $mod+9 exec "echo 0 > /tmp/sovpipe"
    bindsym --release $mod+0 exec "echo 0 > /tmp/sovpipe"
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
    
    # Workspace monitor bindings
    workspace 1 output "Samsung Electric Company T24D391 0x00000000"
    workspace 2 output "Samsung Electric Company T24D391 0x00000000"
    workspace 3 output "Samsung Electric Company T24D391 0x00000000"
    workspace 4 output "Samsung Electric Company T24D391 0x00000000"
    workspace 5 output "Samsung Electric Company T24D391 0x00000000"
    workspace 6 output "Acer Technologies Acer V193W LC1080364212"
    workspace 7 output "Acer Technologies Acer V193W LC1080364212"
    workspace 8 output "Acer Technologies Acer V193W LC1080364212"
    workspace 9 output "Acer Technologies Acer V193W LC1080364212"
    workspace 10 output "Acer Technologies Acer V193W LC1080364212"

    # Show layout overview
    bindsym --no-repeat $mod+Tab exec "echo 1 > /tmp/sovpipe"
    bindsym --release $mod+Tab exec "echo 0 > /tmp/sovpipe"
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

#
# Audio control:
#
bindsym --locked XF86AudioMute exec pamixer -t && ( pamixer --get-mute && echo 0 > $WOBSOCK ) || pamixer --get-volume > $WOBSOCK
bindsym --locked XF86AudioLowerVolume exec pamixer -ud 5 && pamixer --get-volume > $WOBSOCK
bindsym --locked XF86AudioRaiseVolume exec pamixer -ui 5 && pamixer --get-volume > $WOBSOCK

bindsym Shift+XF86AudioMute exec pamixer --default-source -t && ( pamixer --default-source --get-mute && echo 0 > $WOBSOCK ) || pamixer --default-source --get-volume > $WOBSOCK
bindsym Shift+XF86AudioLowerVolume exec pamixer --default-source -ud 2 && pamixer --default-source --get-volume > $WOBSOCK
bindsym Shift+XF86AudioRaiseVolume exec pamixer --default-source -ui 2 && pamixer --default-source --get-volume > $WOBSOCK

#
# Player control:
#
bindsym XF86AudioPlay exec playerctl play-pause
bindsym XF86AudioPrev exec playerctl previous
bindsym XF86AudioNext exec playerctl next

#
# Gaps
#
gaps inner 15

#
# Border
# 
default_border pixel 5
client.focused #5E81AC #5E81AC #ffffff
client.urgent  #BF616A #BF616A #ffffff


#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
# bar {
#     position bottom
# 
#     # When the status_command prints a new line to stdout, swaybar updates.
#     # The default just shows the current date and time.
#     status_command while date +'%Y-%m-%d %I:%M:%S %p'; do sleep 1; done
# 
#     colors {
#         statusline #ffffff
#         background #323232
#         inactive_workspace #32323200 #32323200 #5c5c5c
#     }
# }

include /etc/sway/config.d/*

#
# Font configuration
#
font pango:Roboto Condensed 9

#
# Title configuration
#
for_window [shell=".*"] title_format "%title :: %shell"

#
# Floating configuration
#


#
# Input configuration
#
input type:keyboard {
    xkb_layout "us,us"
    xkb_variant ",intl"
    xkb_options "grp:shifts_toggle"
}

input type:tablet_tool {
    map_to_output "Samsung Electric Company T24D391 0x00000000"
    left_handed enabled
}

# 
# Export variables for wayland
#
exec dbus-update-activation-environment --systemd DISPLAY WAYLAND_DISPLAY SWAYSOCK XDG_CURRENT_DESKTOP=sway

workspace 1

# Application executed on launch
exec /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1
exec salut &
exec albert &
exec gammastep -l 43.9:11.1 -m wayland &
exec udiskie --tray &
exec pasystray &
exec --no-startup-id flameshot &
exec solaar --window=hide &
exec rm -f $WOBSOCK && mkfifo $WOBSOCK && tail -f $WOBSOCK | wob
exec rm -f /tmp/sovpipe && mkfifo /tmp/sovpipe && tail -f /tmp/sovpipe | sov
exec_always --no-startup-id autotiling
exec waybar
exec xrandr --output $(xrandr | grep 1920x1080 | cut -d " " -f1) --primary
