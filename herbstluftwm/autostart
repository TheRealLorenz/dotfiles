#!/usr/bin/env bash

# this is a simple config for herbstluftwm

hc() {
    herbstclient "$@"
}

hc emit_hook reload

xsetroot -solid '#FFFFFF'

# remove all existing keybindings
hc keyunbind --all

# keybindings
# if you have a super key you will be much happier with Mod set to Mod4
#Mod=Mod1    # Use alt as the main modifier
Mod=Mod4   # Use the super key as the main modifier

hc keybind $Mod-Shift-e spawn rofi -show exit -modi "exit:~/.config/rofi/exit.sh"
hc keybind $Mod-Shift-r reload
hc keybind $Mod-Shift-q close
hc keybind $Mod-Return spawn alacritty
# hc keybind $Mod-d spawn rofi -show drun -modi drun -show-icons
hc keybind $Mod-Tab spawn rofi -show window -modi window --show-icons
hc keybind $Mod-Shift-t spawn rofi -show xrdb -modi "xrdb:~/.config/rofi/xrdb_selector.sh"
hc keybind $Mod-p spawn rofi -show memo -modi "memo:~/.config/rofi/memo.sh"
hc keybind $Mod-space spawn layout-switcher

# Media controls
hc keybind XF86AudioNext spawn playerctl next
hc keybind XF86AudioPrev spawn playerctl prev
hc keybind XF86AudioPlay spawn playerctl play-pause

# basic movement in tiling and floating mode
# focusing clients
hc keybind $Mod-Left  focus left
hc keybind $Mod-Down  focus down
hc keybind $Mod-Up    focus up
hc keybind $Mod-Right focus right
hc keybind $Mod-h     focus left
hc keybind $Mod-j     focus down
hc keybind $Mod-k     focus up
hc keybind $Mod-l     focus right

# moving clients in tiling and floating mode
#hc keybind $Mod-Shift-Left  shift left
#hc keybind $Mod-Shift-Down  shift down
#hc keybind $Mod-Shift-Up    shift up
#hc keybind $Mod-Shift-Right shift right
#hc keybind $Mod-Shift-h     shift left
#hc keybind $Mod-Shift-j     shift down
#hc keybind $Mod-Shift-k     shift up
#hc keybind $Mod-Shift-l     shift right

# moving clients in tiling and floating mode (multiple monitors)
hc keybind $Mod-Shift-h or / shift left / \
    chain , lock , shift_to_monitor -l , focus_monitor -l , unlock
hc keybind $Mod-Shift-j or / shift down / \
    chain , lock , shift_to_monitor -d , focus_monitor -d , unlock
hc keybind $Mod-Shift-k or / shift up / \
    chain , lock , shift_to_monitor -u , focus_monitor -u , unlock
hc keybind $Mod-Shift-l or / shift right / \
    chain , lock , shift_to_monitor -r , focus_monitor -r , unlock

hc keybind $Mod-Shift-Left or / shift left / \
    chain , lock , shift_to_monitor -l , focus_monitor -l , unlock
hc keybind $Mod-Shift-Down or / shift down / \
    chain , lock , shift_to_monitor -d , focus_monitor -d , unlock
hc keybind $Mod-Shift-Up or / shift up / \
    chain , lock , shift_to_monitor -u , focus_monitor -u , unlock
hc keybind $Mod-Shift-Right or / shift right / \
    chain , lock , shift_to_monitor -r , focus_monitor -r , unlock

#
# splitting frames
# create an empty frame at the specified direction
hc keybind $Mod-u       split   bottom  0.5
hc keybind $Mod-o       split   right   0.5
# let the current frame explode into subframes
hc keybind $Mod-Control-space split explode

# resizing frames and floating clients
resizestep=0.02
hc keybind $Mod-Control-h       resize left +$resizestep
hc keybind $Mod-Control-j       resize down +$resizestep
hc keybind $Mod-Control-k       resize up +$resizestep
hc keybind $Mod-Control-l       resize right +$resizestep
hc keybind $Mod-Alt-Left    resize left +$resizestep
hc keybind $Mod-Alt-Down    resize down +$resizestep
hc keybind $Mod-Alt-Up      resize up +$resizestep
hc keybind $Mod-Alt-Right   resize right +$resizestep

# tags
tag_names=( {1..8}   )
tag_keys=( {1..9} 0 )

hc rename default "${tag_names[0]}" || true
for i in "${!tag_names[@]}" ; do
    hc add "${tag_names[$i]}"
    key="${tag_keys[$i]}"
    if ! [ -z "$key" ] ; then
        hc keybind "$Mod-$key" use_index "$i"
        hc keybind "$Mod-Shift-$key" move_index "$i"
    fi
done

# cycle through tags
hc keybind $Mod-period use_index +1 --skip-visible
hc keybind $Mod-comma  use_index -1 --skip-visible

hc keybind $Mod-Control-Right use_index +1 --skip-visible
hc keybind $Mod-Control-Left use_index -1 --skip-visible

# layouting
hc keybind $Mod-r remove
hc keybind $Mod-s floating toggle
hc keybind $Mod-f fullscreen toggle
hc keybind $Mod-Shift-s set_attr clients.focus.floating toggle
# hc keybind $Mod-p pseudotile toggle
    
# The following cycles through the available layouts within a frame, but skips
# layouts, if the layout change wouldn't affect the actual window positions.
# I.e. if there are two windows within a frame, the grid layout is skipped.
#hc keybind $Mod-space                                                           \
#            or , and . compare tags.focus.curframe_wcount = 2                   \
#                     . cycle_layout +1 vertical horizontal max vertical grid    \
#               , cycle_layout +1

# mouse
hc mouseunbind --all
hc mousebind $Mod-Button1 move
hc mousebind $Mod-Button2 zoom
hc mousebind $Mod-Button3 resize

# focus
hc keybind $Mod-BackSpace   cycle_monitor
hc keybind $Mod-c cycle
hc keybind $Mod-i jumpto urgent

# theme
hc attr theme.tiling.reset 1
hc attr theme.floating.reset 1
hc set frame_border_active_color '#ffb52a'
hc set frame_border_normal_color '#222'
hc set frame_bg_normal_color '#222'
hc set frame_bg_active_color '#ffb52a'
hc set frame_border_width 1
hc set always_show_frame on
hc set frame_bg_transparent on
hc set frame_transparent_width 5 
hc set frame_gap 15

hc attr theme.active.color '#ffb52a'
hc attr theme.normal.color '#222'
hc attr theme.urgent.color orange
hc attr theme.inner_width 1
hc attr theme.inner_color black
hc attr theme.border_width 5
hc attr theme.floating.border_width 4
hc attr theme.floating.outer_width 1
hc attr theme.floating.outer_color black
hc attr theme.active.inner_color '#ffb52a'
hc attr theme.active.outer_color '#ffb52a'
hc attr theme.background_color '#141414'

hc set window_gap 0
hc set frame_padding 0
hc set smart_window_surroundings off
hc set smart_frame_surroundings off
hc set mouse_recenter_gap 0

# rules
hc unrule -F
hc rule class=discord tag=
hc rule class=Spotify tag=
#hc rule class=XTerm tag=3 # move all xterms to tag 3
hc rule focus=on # normally focus new clients
#hc rule focus=off # normally do not focus new clients
# give focus to most common terminals
#hc rule class~'(.*[Rr]xvt.*|.*[Tt]erm|Konsole)' focus=on
hc rule --class=Float floating=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(DIALOG|UTILITY|SPLASH)' floating=on
hc rule windowtype='_NET_WM_WINDOW_TYPE_DIALOG' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(NOTIFICATION|DOCK|DESKTOP)' manage=off

hc set tree_style '╾│ ├└╼─┐'   

# unlock, just to be sure
hc unlock

# do multi monitor setup here, e.g.:
# hc set_monitors 1280x1024+0+0 1280x1024+1280+0
# or simply:
hc detect_monitors

# Start compositor
killall picom
picom --experimental-backend &

# Start bars
.config/polybar/scripts/launch.sh &

# Applying bg
~/.fehbg &

# Notification manager
/usr/lib/xfce4/notifyd/xfce4-notifyd &

# Start solaar
~/.local/scripts/solaar-launch.sh 2>/dev/null

# Execute once
if hc silent new_attr bool my_not_first_autostart ; then
    redshift &
    flameshot &
    udiskie --tray &
fi
