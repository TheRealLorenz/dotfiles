# Languages

[[language]]
name = "html"
language-servers = ["vscode-html-language-server", "emmet-language-server"]
formatter = { command = 'prettier', args = ["--parser", "html"] }

[[language]]
name = "json"
formatter = { command = 'prettier', args = ["--parser", "json"] }

[[language]]
name = "css"
formatter = { command = 'prettier', args = ["--parser", "css"] }

[[language]]
name = "javascript"
language-servers = ["typescript-language-server", "eslint"]
formatter = { command = 'prettier', args = ["--parser", "typescript"] }
auto-format = true

[[language]]
name = "typescript"
language-servers = ["typescript-language-server", "eslint"]
formatter = { command = 'prettier', args = ["--parser", "typescript"] }
auto-format = true

[[language]]
name = "tsx"
language-servers = ["typescript-language-server", "eslint", "emmet-language-server"]
formatter = { command = 'prettier', args = ["--parser", "typescript"] }
auto-format = true

[[language]]
name = "svelte"
language-servers = ["eslint", "svelteserver", "emmet-language-server"]
formatter = { command = 'prettier' }
auto-format = true


# Language servers

[language-server.eslint]
command = "vscode-eslint-language-server"
args = ["--stdio"]

[language-server.eslint.config]
format = true
nodePath = ""
onIgnoredFiles = "off"
packageManager = "npm"
quiet = false
rulesCustomizations = []
run = "onType"
useESLintClass = false
validate = "on"
codeAction = { disableRuleComment = { enable = true, location = "separateLine" }, showDocumentation = { enable = true } }
codeActionOnSave = { mode = "all" }
experimental = { }
problems = { shortenToSingleLine = false }
workingDirectory = { mode = "auto" }

[language-server.emmet-language-server]
command = "emmet-language-server"
args = ["--stdio"]

[language-server.rust-analyzer.config]
check = { command = "clippy" }